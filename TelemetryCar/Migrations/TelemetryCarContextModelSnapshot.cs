// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TelemetryCar.Data;

namespace TelemetryCar.Migrations
{
    [DbContext(typeof(TelemetryCarContext))]
    partial class TelemetryCarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TelemetryCar.Model.CarModel", b =>
            {
                b.Property<int>("IdCar")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("ModifiedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Typ")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("IdCar");

                b.ToTable("CarModel");
            });

            modelBuilder.Entity("TelemetryCar.Model.TelemetryModel", b =>
            {
                b.Property<int>("IdTel")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<double>("Capacity")
                    .HasColumnType("float");

                b.Property<int>("CarIdCar")
                    .HasColumnType("int");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<double>("Latitude")
                    .HasColumnType("float");

                b.Property<double>("Longitude")
                    .HasColumnType("float");

                b.Property<DateTime>("ModifiedAt")
                    .HasColumnType("datetime2");

                b.Property<double>("Speed")
                    .HasColumnType("float");

                b.Property<double>("Throttle")
                    .HasColumnType("float");

                b.HasKey("IdTel");

                b.HasIndex("CarIdCar");

                b.ToTable("TelemetryModel");
            });

            modelBuilder.Entity("TelemetryCar.Model.TelemetryModel", b =>
            {
                b.HasOne("TelemetryCar.Model.CarModel", "Car")
                    .WithMany("TelemetryCollection")
                    .HasForeignKey("CarIdCar")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });
#pragma warning restore 612, 618
        }
    }
}